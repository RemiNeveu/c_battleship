name: Publish Docker Image to GHCR

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to get all tags

      # Determine the tags
      - name: Determine tags
        id: determine_tags
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          MAJOR_MINOR=$(echo $LATEST_TAG | sed 's/\([0-9]*\.[0-9]*\)\.[0-9]*/\1/')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "MAJOR_MINOR=$MAJOR_MINOR" >> $GITHUB_ENV

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up Qemu for multi platform
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate Docker metadata
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/remineveu/c_battleship_server
          tags: |
            type=raw,value=${{ env.LATEST_TAG }}
            type=raw,value=${{ env.MAJOR_MINOR }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      # Build and push the Docker image using the Dockerfile
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: containers/battleship-server.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
